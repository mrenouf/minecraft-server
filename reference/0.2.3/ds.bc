Compiled from SourceFile
public class ds extends java.lang.Object{
public double a;

public double b;

public double c;

public double d;

public double e;

public double f;

public static ds a(double, double, double, double, double, double);
  Code:
   0:	new	#2; //class ds
   3:	dup
   4:	dload_0
   5:	dload_2
   6:	dload	4
   8:	dload	6
   10:	dload	8
   12:	dload	10
   14:	invokespecial	#22; //Method "<init>":(DDDDDD)V
   17:	areturn

public static void a();
  Code:
   0:	iconst_0
   1:	putstatic	#17; //Field h:I
   4:	return

public static ds b(double, double, double, double, double, double);
  Code:
   0:	getstatic	#17; //Field h:I
   3:	getstatic	#16; //Field g:Ljava/util/List;
   6:	invokeinterface	#34,  1; //InterfaceMethod java/util/List.size:()I
   11:	if_icmplt	32
   14:	getstatic	#16; //Field g:Ljava/util/List;
   17:	dconst_0
   18:	dconst_0
   19:	dconst_0
   20:	dconst_0
   21:	dconst_0
   22:	dconst_0
   23:	invokestatic	#23; //Method a:(DDDDDD)Lds;
   26:	invokeinterface	#32,  2; //InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
   31:	pop
   32:	getstatic	#16; //Field g:Ljava/util/List;
   35:	getstatic	#17; //Field h:I
   38:	dup
   39:	iconst_1
   40:	iadd
   41:	putstatic	#17; //Field h:I
   44:	invokeinterface	#33,  2; //InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
   49:	checkcast	#2; //class ds
   52:	dload_0
   53:	dload_2
   54:	dload	4
   56:	dload	6
   58:	dload	8
   60:	dload	10
   62:	invokevirtual	#27; //Method c:(DDDDDD)Lds;
   65:	areturn

public ds c(double, double, double, double, double, double);
  Code:
   0:	aload_0
   1:	dload_1
   2:	putfield	#10; //Field a:D
   5:	aload_0
   6:	dload_3
   7:	putfield	#11; //Field b:D
   10:	aload_0
   11:	dload	5
   13:	putfield	#12; //Field c:D
   16:	aload_0
   17:	dload	7
   19:	putfield	#13; //Field d:D
   22:	aload_0
   23:	dload	9
   25:	putfield	#14; //Field e:D
   28:	aload_0
   29:	dload	11
   31:	putfield	#15; //Field f:D
   34:	aload_0
   35:	areturn

public ds a(double, double, double);
  Code:
   0:	aload_0
   1:	getfield	#10; //Field a:D
   4:	dstore	7
   6:	aload_0
   7:	getfield	#11; //Field b:D
   10:	dstore	9
   12:	aload_0
   13:	getfield	#12; //Field c:D
   16:	dstore	11
   18:	aload_0
   19:	getfield	#13; //Field d:D
   22:	dstore	13
   24:	aload_0
   25:	getfield	#14; //Field e:D
   28:	dstore	15
   30:	aload_0
   31:	getfield	#15; //Field f:D
   34:	dstore	17
   36:	dload_1
   37:	dconst_0
   38:	dcmpg
   39:	ifge	48
   42:	dload	7
   44:	dload_1
   45:	dadd
   46:	dstore	7
   48:	dload_1
   49:	dconst_0
   50:	dcmpl
   51:	ifle	60
   54:	dload	13
   56:	dload_1
   57:	dadd
   58:	dstore	13
   60:	dload_3
   61:	dconst_0
   62:	dcmpg
   63:	ifge	72
   66:	dload	9
   68:	dload_3
   69:	dadd
   70:	dstore	9
   72:	dload_3
   73:	dconst_0
   74:	dcmpl
   75:	ifle	84
   78:	dload	15
   80:	dload_3
   81:	dadd
   82:	dstore	15
   84:	dload	5
   86:	dconst_0
   87:	dcmpg
   88:	ifge	98
   91:	dload	11
   93:	dload	5
   95:	dadd
   96:	dstore	11
   98:	dload	5
   100:	dconst_0
   101:	dcmpl
   102:	ifle	112
   105:	dload	17
   107:	dload	5
   109:	dadd
   110:	dstore	17
   112:	dload	7
   114:	dload	9
   116:	dload	11
   118:	dload	13
   120:	dload	15
   122:	dload	17
   124:	invokestatic	#25; //Method b:(DDDDDD)Lds;
   127:	areturn

public ds b(double, double, double);
  Code:
   0:	aload_0
   1:	getfield	#10; //Field a:D
   4:	dload_1
   5:	dsub
   6:	dstore	7
   8:	aload_0
   9:	getfield	#11; //Field b:D
   12:	dload_3
   13:	dsub
   14:	dstore	9
   16:	aload_0
   17:	getfield	#12; //Field c:D
   20:	dload	5
   22:	dsub
   23:	dstore	11
   25:	aload_0
   26:	getfield	#13; //Field d:D
   29:	dload_1
   30:	dadd
   31:	dstore	13
   33:	aload_0
   34:	getfield	#14; //Field e:D
   37:	dload_3
   38:	dadd
   39:	dstore	15
   41:	aload_0
   42:	getfield	#15; //Field f:D
   45:	dload	5
   47:	dadd
   48:	dstore	17
   50:	dload	7
   52:	dload	9
   54:	dload	11
   56:	dload	13
   58:	dload	15
   60:	dload	17
   62:	invokestatic	#25; //Method b:(DDDDDD)Lds;
   65:	areturn

public ds c(double, double, double);
  Code:
   0:	aload_0
   1:	getfield	#10; //Field a:D
   4:	dload_1
   5:	dadd
   6:	aload_0
   7:	getfield	#11; //Field b:D
   10:	dload_3
   11:	dadd
   12:	aload_0
   13:	getfield	#12; //Field c:D
   16:	dload	5
   18:	dadd
   19:	aload_0
   20:	getfield	#13; //Field d:D
   23:	dload_1
   24:	dadd
   25:	aload_0
   26:	getfield	#14; //Field e:D
   29:	dload_3
   30:	dadd
   31:	aload_0
   32:	getfield	#15; //Field f:D
   35:	dload	5
   37:	dadd
   38:	invokestatic	#25; //Method b:(DDDDDD)Lds;
   41:	areturn

public double a(ds, double);
  Code:
   0:	aload_1
   1:	getfield	#14; //Field e:D
   4:	aload_0
   5:	getfield	#11; //Field b:D
   8:	dcmpg
   9:	ifle	24
   12:	aload_1
   13:	getfield	#11; //Field b:D
   16:	aload_0
   17:	getfield	#14; //Field e:D
   20:	dcmpl
   21:	iflt	26
   24:	dload_2
   25:	dreturn
   26:	aload_1
   27:	getfield	#15; //Field f:D
   30:	aload_0
   31:	getfield	#12; //Field c:D
   34:	dcmpg
   35:	ifle	50
   38:	aload_1
   39:	getfield	#12; //Field c:D
   42:	aload_0
   43:	getfield	#15; //Field f:D
   46:	dcmpl
   47:	iflt	52
   50:	dload_2
   51:	dreturn
   52:	dload_2
   53:	dconst_0
   54:	dcmpl
   55:	ifle	91
   58:	aload_1
   59:	getfield	#13; //Field d:D
   62:	aload_0
   63:	getfield	#10; //Field a:D
   66:	dcmpg
   67:	ifgt	91
   70:	aload_0
   71:	getfield	#10; //Field a:D
   74:	aload_1
   75:	getfield	#13; //Field d:D
   78:	dsub
   79:	dstore	4
   81:	dload	4
   83:	dload_2
   84:	dcmpg
   85:	ifge	91
   88:	dload	4
   90:	dstore_2
   91:	dload_2
   92:	dconst_0
   93:	dcmpg
   94:	ifge	130
   97:	aload_1
   98:	getfield	#10; //Field a:D
   101:	aload_0
   102:	getfield	#13; //Field d:D
   105:	dcmpl
   106:	iflt	130
   109:	aload_0
   110:	getfield	#13; //Field d:D
   113:	aload_1
   114:	getfield	#10; //Field a:D
   117:	dsub
   118:	dstore	4
   120:	dload	4
   122:	dload_2
   123:	dcmpl
   124:	ifle	130
   127:	dload	4
   129:	dstore_2
   130:	dload_2
   131:	dreturn

public double b(ds, double);
  Code:
   0:	aload_1
   1:	getfield	#13; //Field d:D
   4:	aload_0
   5:	getfield	#10; //Field a:D
   8:	dcmpg
   9:	ifle	24
   12:	aload_1
   13:	getfield	#10; //Field a:D
   16:	aload_0
   17:	getfield	#13; //Field d:D
   20:	dcmpl
   21:	iflt	26
   24:	dload_2
   25:	dreturn
   26:	aload_1
   27:	getfield	#15; //Field f:D
   30:	aload_0
   31:	getfield	#12; //Field c:D
   34:	dcmpg
   35:	ifle	50
   38:	aload_1
   39:	getfield	#12; //Field c:D
   42:	aload_0
   43:	getfield	#15; //Field f:D
   46:	dcmpl
   47:	iflt	52
   50:	dload_2
   51:	dreturn
   52:	dload_2
   53:	dconst_0
   54:	dcmpl
   55:	ifle	91
   58:	aload_1
   59:	getfield	#14; //Field e:D
   62:	aload_0
   63:	getfield	#11; //Field b:D
   66:	dcmpg
   67:	ifgt	91
   70:	aload_0
   71:	getfield	#11; //Field b:D
   74:	aload_1
   75:	getfield	#14; //Field e:D
   78:	dsub
   79:	dstore	4
   81:	dload	4
   83:	dload_2
   84:	dcmpg
   85:	ifge	91
   88:	dload	4
   90:	dstore_2
   91:	dload_2
   92:	dconst_0
   93:	dcmpg
   94:	ifge	130
   97:	aload_1
   98:	getfield	#11; //Field b:D
   101:	aload_0
   102:	getfield	#14; //Field e:D
   105:	dcmpl
   106:	iflt	130
   109:	aload_0
   110:	getfield	#14; //Field e:D
   113:	aload_1
   114:	getfield	#11; //Field b:D
   117:	dsub
   118:	dstore	4
   120:	dload	4
   122:	dload_2
   123:	dcmpl
   124:	ifle	130
   127:	dload	4
   129:	dstore_2
   130:	dload_2
   131:	dreturn

public double c(ds, double);
  Code:
   0:	aload_1
   1:	getfield	#13; //Field d:D
   4:	aload_0
   5:	getfield	#10; //Field a:D
   8:	dcmpg
   9:	ifle	24
   12:	aload_1
   13:	getfield	#10; //Field a:D
   16:	aload_0
   17:	getfield	#13; //Field d:D
   20:	dcmpl
   21:	iflt	26
   24:	dload_2
   25:	dreturn
   26:	aload_1
   27:	getfield	#14; //Field e:D
   30:	aload_0
   31:	getfield	#11; //Field b:D
   34:	dcmpg
   35:	ifle	50
   38:	aload_1
   39:	getfield	#11; //Field b:D
   42:	aload_0
   43:	getfield	#14; //Field e:D
   46:	dcmpl
   47:	iflt	52
   50:	dload_2
   51:	dreturn
   52:	dload_2
   53:	dconst_0
   54:	dcmpl
   55:	ifle	91
   58:	aload_1
   59:	getfield	#15; //Field f:D
   62:	aload_0
   63:	getfield	#12; //Field c:D
   66:	dcmpg
   67:	ifgt	91
   70:	aload_0
   71:	getfield	#12; //Field c:D
   74:	aload_1
   75:	getfield	#15; //Field f:D
   78:	dsub
   79:	dstore	4
   81:	dload	4
   83:	dload_2
   84:	dcmpg
   85:	ifge	91
   88:	dload	4
   90:	dstore_2
   91:	dload_2
   92:	dconst_0
   93:	dcmpg
   94:	ifge	130
   97:	aload_1
   98:	getfield	#12; //Field c:D
   101:	aload_0
   102:	getfield	#15; //Field f:D
   105:	dcmpl
   106:	iflt	130
   109:	aload_0
   110:	getfield	#15; //Field f:D
   113:	aload_1
   114:	getfield	#12; //Field c:D
   117:	dsub
   118:	dstore	4
   120:	dload	4
   122:	dload_2
   123:	dcmpl
   124:	ifle	130
   127:	dload	4
   129:	dstore_2
   130:	dload_2
   131:	dreturn

public boolean a(ds);
  Code:
   0:	aload_1
   1:	getfield	#13; //Field d:D
   4:	aload_0
   5:	getfield	#10; //Field a:D
   8:	dcmpg
   9:	ifle	24
   12:	aload_1
   13:	getfield	#10; //Field a:D
   16:	aload_0
   17:	getfield	#13; //Field d:D
   20:	dcmpl
   21:	iflt	26
   24:	iconst_0
   25:	ireturn
   26:	aload_1
   27:	getfield	#14; //Field e:D
   30:	aload_0
   31:	getfield	#11; //Field b:D
   34:	dcmpg
   35:	ifle	50
   38:	aload_1
   39:	getfield	#11; //Field b:D
   42:	aload_0
   43:	getfield	#14; //Field e:D
   46:	dcmpl
   47:	iflt	52
   50:	iconst_0
   51:	ireturn
   52:	aload_1
   53:	getfield	#15; //Field f:D
   56:	aload_0
   57:	getfield	#12; //Field c:D
   60:	dcmpg
   61:	ifle	76
   64:	aload_1
   65:	getfield	#12; //Field c:D
   68:	aload_0
   69:	getfield	#15; //Field f:D
   72:	dcmpl
   73:	iflt	78
   76:	iconst_0
   77:	ireturn
   78:	iconst_1
   79:	ireturn

public ds d(double, double, double);
  Code:
   0:	aload_0
   1:	dup
   2:	getfield	#10; //Field a:D
   5:	dload_1
   6:	dadd
   7:	putfield	#10; //Field a:D
   10:	aload_0
   11:	dup
   12:	getfield	#11; //Field b:D
   15:	dload_3
   16:	dadd
   17:	putfield	#11; //Field b:D
   20:	aload_0
   21:	dup
   22:	getfield	#12; //Field c:D
   25:	dload	5
   27:	dadd
   28:	putfield	#12; //Field c:D
   31:	aload_0
   32:	dup
   33:	getfield	#13; //Field d:D
   36:	dload_1
   37:	dadd
   38:	putfield	#13; //Field d:D
   41:	aload_0
   42:	dup
   43:	getfield	#14; //Field e:D
   46:	dload_3
   47:	dadd
   48:	putfield	#14; //Field e:D
   51:	aload_0
   52:	dup
   53:	getfield	#15; //Field f:D
   56:	dload	5
   58:	dadd
   59:	putfield	#15; //Field f:D
   62:	aload_0
   63:	areturn

public ds e(double, double, double);
  Code:
   0:	aload_0
   1:	getfield	#10; //Field a:D
   4:	dstore	7
   6:	aload_0
   7:	getfield	#11; //Field b:D
   10:	dstore	9
   12:	aload_0
   13:	getfield	#12; //Field c:D
   16:	dstore	11
   18:	aload_0
   19:	getfield	#13; //Field d:D
   22:	dstore	13
   24:	aload_0
   25:	getfield	#14; //Field e:D
   28:	dstore	15
   30:	aload_0
   31:	getfield	#15; //Field f:D
   34:	dstore	17
   36:	dload_1
   37:	dconst_0
   38:	dcmpg
   39:	ifge	48
   42:	dload	7
   44:	dload_1
   45:	dsub
   46:	dstore	7
   48:	dload_1
   49:	dconst_0
   50:	dcmpl
   51:	ifle	60
   54:	dload	13
   56:	dload_1
   57:	dsub
   58:	dstore	13
   60:	dload_3
   61:	dconst_0
   62:	dcmpg
   63:	ifge	72
   66:	dload	9
   68:	dload_3
   69:	dsub
   70:	dstore	9
   72:	dload_3
   73:	dconst_0
   74:	dcmpl
   75:	ifle	84
   78:	dload	15
   80:	dload_3
   81:	dsub
   82:	dstore	15
   84:	dload	5
   86:	dconst_0
   87:	dcmpg
   88:	ifge	98
   91:	dload	11
   93:	dload	5
   95:	dsub
   96:	dstore	11
   98:	dload	5
   100:	dconst_0
   101:	dcmpl
   102:	ifle	112
   105:	dload	17
   107:	dload	5
   109:	dsub
   110:	dstore	17
   112:	dload	7
   114:	dload	9
   116:	dload	11
   118:	dload	13
   120:	dload	15
   122:	dload	17
   124:	invokestatic	#25; //Method b:(DDDDDD)Lds;
   127:	areturn

public ds b();
  Code:
   0:	aload_0
   1:	getfield	#10; //Field a:D
   4:	aload_0
   5:	getfield	#11; //Field b:D
   8:	aload_0
   9:	getfield	#12; //Field c:D
   12:	aload_0
   13:	getfield	#13; //Field d:D
   16:	aload_0
   17:	getfield	#14; //Field e:D
   20:	aload_0
   21:	getfield	#15; //Field f:D
   24:	invokestatic	#25; //Method b:(DDDDDD)Lds;
   27:	areturn

public gk a(ba, ba);
  Code:
   0:	aload_1
   1:	aload_2
   2:	aload_0
   3:	getfield	#10; //Field a:D
   6:	invokevirtual	#18; //Method ba.a:(Lba;D)Lba;
   9:	astore_3
   10:	aload_1
   11:	aload_2
   12:	aload_0
   13:	getfield	#13; //Field d:D
   16:	invokevirtual	#18; //Method ba.a:(Lba;D)Lba;
   19:	astore	4
   21:	aload_1
   22:	aload_2
   23:	aload_0
   24:	getfield	#11; //Field b:D
   27:	invokevirtual	#20; //Method ba.b:(Lba;D)Lba;
   30:	astore	5
   32:	aload_1
   33:	aload_2
   34:	aload_0
   35:	getfield	#14; //Field e:D
   38:	invokevirtual	#20; //Method ba.b:(Lba;D)Lba;
   41:	astore	6
   43:	aload_1
   44:	aload_2
   45:	aload_0
   46:	getfield	#12; //Field c:D
   49:	invokevirtual	#21; //Method ba.c:(Lba;D)Lba;
   52:	astore	7
   54:	aload_1
   55:	aload_2
   56:	aload_0
   57:	getfield	#15; //Field f:D
   60:	invokevirtual	#21; //Method ba.c:(Lba;D)Lba;
   63:	astore	8
   65:	aload_0
   66:	aload_3
   67:	invokespecial	#24; //Method a:(Lba;)Z
   70:	ifne	75
   73:	aconst_null
   74:	astore_3
   75:	aload_0
   76:	aload	4
   78:	invokespecial	#24; //Method a:(Lba;)Z
   81:	ifne	87
   84:	aconst_null
   85:	astore	4
   87:	aload_0
   88:	aload	5
   90:	invokespecial	#26; //Method b:(Lba;)Z
   93:	ifne	99
   96:	aconst_null
   97:	astore	5
   99:	aload_0
   100:	aload	6
   102:	invokespecial	#26; //Method b:(Lba;)Z
   105:	ifne	111
   108:	aconst_null
   109:	astore	6
   111:	aload_0
   112:	aload	7
   114:	invokespecial	#28; //Method c:(Lba;)Z
   117:	ifne	123
   120:	aconst_null
   121:	astore	7
   123:	aload_0
   124:	aload	8
   126:	invokespecial	#28; //Method c:(Lba;)Z
   129:	ifne	135
   132:	aconst_null
   133:	astore	8
   135:	aconst_null
   136:	astore	9
   138:	aload_3
   139:	ifnull	165
   142:	aload	9
   144:	ifnull	162
   147:	aload_1
   148:	aload_3
   149:	invokevirtual	#19; //Method ba.b:(Lba;)D
   152:	aload_1
   153:	aload	9
   155:	invokevirtual	#19; //Method ba.b:(Lba;)D
   158:	dcmpg
   159:	ifge	165
   162:	aload_3
   163:	astore	9
   165:	aload	4
   167:	ifnull	195
   170:	aload	9
   172:	ifnull	191
   175:	aload_1
   176:	aload	4
   178:	invokevirtual	#19; //Method ba.b:(Lba;)D
   181:	aload_1
   182:	aload	9
   184:	invokevirtual	#19; //Method ba.b:(Lba;)D
   187:	dcmpg
   188:	ifge	195
   191:	aload	4
   193:	astore	9
   195:	aload	5
   197:	ifnull	225
   200:	aload	9
   202:	ifnull	221
   205:	aload_1
   206:	aload	5
   208:	invokevirtual	#19; //Method ba.b:(Lba;)D
   211:	aload_1
   212:	aload	9
   214:	invokevirtual	#19; //Method ba.b:(Lba;)D
   217:	dcmpg
   218:	ifge	225
   221:	aload	5
   223:	astore	9
   225:	aload	6
   227:	ifnull	255
   230:	aload	9
   232:	ifnull	251
   235:	aload_1
   236:	aload	6
   238:	invokevirtual	#19; //Method ba.b:(Lba;)D
   241:	aload_1
   242:	aload	9
   244:	invokevirtual	#19; //Method ba.b:(Lba;)D
   247:	dcmpg
   248:	ifge	255
   251:	aload	6
   253:	astore	9
   255:	aload	7
   257:	ifnull	285
   260:	aload	9
   262:	ifnull	281
   265:	aload_1
   266:	aload	7
   268:	invokevirtual	#19; //Method ba.b:(Lba;)D
   271:	aload_1
   272:	aload	9
   274:	invokevirtual	#19; //Method ba.b:(Lba;)D
   277:	dcmpg
   278:	ifge	285
   281:	aload	7
   283:	astore	9
   285:	aload	8
   287:	ifnull	315
   290:	aload	9
   292:	ifnull	311
   295:	aload_1
   296:	aload	8
   298:	invokevirtual	#19; //Method ba.b:(Lba;)D
   301:	aload_1
   302:	aload	9
   304:	invokevirtual	#19; //Method ba.b:(Lba;)D
   307:	dcmpg
   308:	ifge	315
   311:	aload	8
   313:	astore	9
   315:	aload	9
   317:	ifnonnull	322
   320:	aconst_null
   321:	areturn
   322:	iconst_m1
   323:	istore	10
   325:	aload	9
   327:	aload_3
   328:	if_acmpne	334
   331:	iconst_4
   332:	istore	10
   334:	aload	9
   336:	aload	4
   338:	if_acmpne	344
   341:	iconst_5
   342:	istore	10
   344:	aload	9
   346:	aload	5
   348:	if_acmpne	354
   351:	iconst_0
   352:	istore	10
   354:	aload	9
   356:	aload	6
   358:	if_acmpne	364
   361:	iconst_1
   362:	istore	10
   364:	aload	9
   366:	aload	7
   368:	if_acmpne	374
   371:	iconst_2
   372:	istore	10
   374:	aload	9
   376:	aload	8
   378:	if_acmpne	384
   381:	iconst_3
   382:	istore	10
   384:	new	#3; //class gk
   387:	dup
   388:	iconst_0
   389:	iconst_0
   390:	iconst_0
   391:	iload	10
   393:	aload	9
   395:	invokespecial	#29; //Method gk."<init>":(IIIILba;)V
   398:	areturn

public void b(ds);
  Code:
   0:	aload_0
   1:	aload_1
   2:	getfield	#10; //Field a:D
   5:	putfield	#10; //Field a:D
   8:	aload_0
   9:	aload_1
   10:	getfield	#11; //Field b:D
   13:	putfield	#11; //Field b:D
   16:	aload_0
   17:	aload_1
   18:	getfield	#12; //Field c:D
   21:	putfield	#12; //Field c:D
   24:	aload_0
   25:	aload_1
   26:	getfield	#13; //Field d:D
   29:	putfield	#13; //Field d:D
   32:	aload_0
   33:	aload_1
   34:	getfield	#14; //Field e:D
   37:	putfield	#14; //Field e:D
   40:	aload_0
   41:	aload_1
   42:	getfield	#15; //Field f:D
   45:	putfield	#15; //Field f:D
   48:	return

static {};
  Code:
   0:	new	#5; //class java/util/ArrayList
   3:	dup
   4:	invokespecial	#31; //Method java/util/ArrayList."<init>":()V
   7:	putstatic	#16; //Field g:Ljava/util/List;
   10:	iconst_0
   11:	putstatic	#17; //Field h:I
   14:	return

}

